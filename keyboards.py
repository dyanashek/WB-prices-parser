from telebot import types

import config


def qr_keyboard():
    """Keyboard for qr generation."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('üñº –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å qr-code', callback_data = 'qr'))

    return keyboard


def manager_keyboard():
    """Generates main keyboard that have option of filling form, check instagram."""

    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä', url = f'https://t.me/{config.MANAGER_USERNAME}'))

    return keyboard

def profile_keyboard():
    """Keyboard for qr generation."""

    keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True,)
    keyboard.add(types.KeyboardButton('üóÇ –ü—Ä–æ—Ñ–∏–ª—å'))

    return keyboard


def profile_settings_keyboard(profile_info):
    subscribe = profile_info[1]
    autorenew = profile_info[2]
    balance = profile_info[4]

    keyboard = types.InlineKeyboardMarkup()

    if not subscribe:
        keyboard.add(types.InlineKeyboardButton('üíµ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É', callback_data = f'subscribe_{int(balance)}'))

    if autorenew:
        keyboard.add(types.InlineKeyboardButton('üîÑ –û—Ç–º–µ–Ω–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ', callback_data = 'cancel'))

    if balance >= 1000:
        keyboard.add(types.InlineKeyboardButton('üë®‚Äçüíº –ú–µ–Ω–µ–¥–∂–µ—Ä', url = f'https://t.me/{config.MANAGER_USERNAME}'))
    
    keyboard.add(types.InlineKeyboardButton('‚ùå –£–±—Ä–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É', callback_data = 'close'))
    
    return keyboard


def days_keyboard(balance):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton(f'‚è≥ 1 –¥–µ–Ω—å ({config.PRICE[1]} —Ä—É–±.)', callback_data = f'days_1_{balance}'))
    keyboard.add(types.InlineKeyboardButton(f'üïï 7 –¥–Ω–µ–π ({config.PRICE[7]} —Ä—É–±.)', callback_data = f'days_7_{balance}'))
    keyboard.add(types.InlineKeyboardButton(f'üìÜ 30 –¥–Ω–µ–π ({config.PRICE[30]} —Ä—É–±.)', callback_data = f'days_30_{balance}'))
    keyboard.add(types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = 'back_profile'))

    return keyboard


def payment_keyboard(days, balance, db_id, payment_url):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('üí∏ –û–ø–ª–∞—Ç–∏—Ç—å', url = payment_url))

    if balance >= config.PRICE[days]:
        keyboard.add(types.InlineKeyboardButton('üèÜ –û–ø–ª–∞—Ç–∏—Ç—å –±–æ–Ω—É—Å–∞–º–∏', callback_data = f'balance_{days}_{db_id}'))
    
    keyboard.add(types.InlineKeyboardButton('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', callback_data = f'back_subscribe_{balance}_{db_id}'))
    
    return keyboard


def buy_keyboard(balance):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('üíµ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É', callback_data = f'subscribe_{int(balance)}'))
    return keyboard


def new_buy_keyboard(balance):
    keyboard = types.InlineKeyboardMarkup()
    keyboard.add(types.InlineKeyboardButton('üíµ –ü—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫—É', callback_data = f'newsubscribe_{int(balance)}'))
    return keyboard